var scene, camera, renderer, $viewport, height, width, SEGMENTS, tetrahedron;
var cameraMoveY = 0;
var currentIndex = 0;
var previousIndex = 0;
var orbsTimesRun = 0;
var soundsTimesRun = 0;
var orbImages = [];
var transitionSounds = [];
var orbPreImages = new Object;
var transitionPreSounds = new Object;
var mouse = new THREE.Vector2(), INTERSECTED;
var raycaster = new THREE.Raycaster();
var currentSegThree = 0;
var numEdgyOrbs = 0;
var slow = false;
THREE.edgyOrbPositions = [];
THREE.bubbles = [];
THREE.bubblesProperties = new Object;
THREE.bubblesProperties.close = new Object;
THREE.bubblesProperties.far = new Object;
THREE.bubblesProperties.close.xyz = [-6.790378958685324, 30.925708770519122, 49.8540941614192, 5.462210507830605, 23.06210733251646, 54.96265436639078, -4.480070751160383, 19.00079507031478, 57.36183116794564, -1.540309558622539, 26.816859550308436, 53.07096208911389, 6.400404201122001, 21.330485629150644, 47.309797967318445, 5.596375926397741, 26.720977056538686, 55.05731791490689, -2.7455401746556163, 28.280367116676643, 43.23859581723809, -6.6419328830670565, 20.456058647250757, 44.57685462664813, -2.3632345267105848, 21.591022833017632, 46.12828302080743, 5.607007591752335, 29.018772308481857, 53.39806363219395, 3.559699187753722, 26.65091189322993, 47.58794604218565, 4.490987547906116, 20.61078831087798, 47.31563912355341, 0.19993171328678727, 23.409376164199784, 43.778902910416946, -6.136426110751927, 18.43602883629501, 57.11316870059818, -7.4871426180470735, 23.72352763544768, 52.67725335783325, -3.0048050545156, 21.17375505156815, 52.90575385210104, -4.329398449044675, 18.807640094310045, 54.435233268886805, 0.6818419613409787, 27.32899463735521, 49.32536053471267, -2.541277235141024, 21.76160039496608, 49.6270257292781, -1.1549081071279943, 29.812091727508232, 44.816762479022145, 4.895295195747167, 19.97796688694507, 51.99207458877936, -3.8762207818217576, 27.466920013539493, 46.49514176417142, 1.4134418161120266, 18.73837078921497, 50.61313188285567, -0.2220338664483279, 30.96499642706476, 56.4602177310735, 1.736049740575254, 26.53800621512346, 52.603704148205, -5.759988947538659, 28.07761320960708, 46.11805629567243, -0.4668756143655628, 32.088097111554816, 56.303639316465706, 1.2519355409312993, 28.530919263139367, 43.99121536524035, -2.463923441246152, 22.068235848564655, 55.3525723121129, -4.524608789943159, 22.469177306629717, 54.83310610870831, -3.622699943371117, 28.263059586752206, 44.36494967201725, -5.732231667498127, 29.968041436513886, 48.86710090562701, 5.8849592541810125, 27.07080702413805, 45.794751978246495, 1.1656059231609106, 19.316083263838664, 56.43538155476563, 1.6124972118996084, 21.55976672307588, 55.98551225266419, -1.9345114252064377, 25.778232573065907, 49.9454536056146, -5.6004067696630955, 22.996504257898778, 52.54509731894359, -2.6210956019349396, 25.469834747491404, 51.91175577696413, 1.5930340241175145, 32.31401155120693, 49.96224140166305, 5.066126170568168, 25.48296137014404, 53.37738186935894, 5.827252030139789, 21.71405014814809, 48.56746903154999, -0.86614805390127, 30.867909314110875, 46.5454983280506, -2.9949765431229025, 30.705878970911726, 49.22841049381532, 2.1202151372563094, 26.21912467526272, 49.161368214990944, 1.218832932645455, 18.428788719465956, 47.08103256998584, -4.67853159760125, 24.625941903796047, 46.05724230525084, 0.8330186549574137, 21.99557799496688, 53.083066667895764, 5.6692720600403845, 25.943379210075364, 57.416550386697054, -1.6161430743522942, 19.78891195030883, 46.513752749888226, -7.156872582854703, 24.337458659429103, 50.683622574433684, -6.654150442918763, 28.358443727483973, 54.381293333135545, -4.5821293839253485, 20.44162587961182, 55.158902729162946, -0.20435328246094286, 24.60060981567949, 43.346702188719064, -3.6226404667831957, 24.984713587909937, 52.07517487579025, -6.6411657992284745, 22.261014707619324, 53.04472993477248, -3.9029671100433916, 24.860313198296353, 57.05175654264167, 6.720258925342932, 28.127148451749235, 55.92715326929465, -3.907930883578956, 26.415161712793633, 54.991829689824954, 1.9862482964526862, 27.936553549952805, 52.050916984444484, -1.5114368288777769, 21.532930956454948, 52.2976470598951, 3.4472560754511505, 25.604380732402205, 50.10403463151306, -3.306541421916336, 27.54067944479175, 55.46209249761887, -7.02823368483223, 19.559904008638114, 54.15862490423024, -6.123810228891671, 18.016603434225544, 56.92969426047057, 4.395941854454577, 19.59090582909994, 48.538162698969245, 4.971001606900245, 17.84125677892007, 44.772802788065746, -0.5787748214788735, 23.042036694241688, 50.14783386839554, -7.46368779335171, 24.913440347881988, 53.47560292459093, 3.4082858415786177, 30.2273602259811, 46.97773820022121, -0.0777724280487746, 27.948452545097098, 56.07353544794023, -3.9238168741576374, 26.021531275473535, 56.122152924072, 4.02162418467924, 18.296389780007303, 47.596528810681775, -5.260801145341247, 27.483905629487708, 51.493220697157085, 2.3929776856675744, 25.51594006596133, 46.892633070237935, -1.7165699461475015, 27.473250770708546, 53.511484084883705, -7.166886372724548, 24.21714480384253, 55.01592225511558, -0.08856409694999456, 28.518908544210717, 54.032023035688326, -2.0601994008757174, 27.215479986043647, 56.70819298713468, -1.207077669678256, 20.920051120920107, 55.97306416952051, -5.587656456045806, 28.46972630592063, 50.2702740940731, 1.037910918239504, 27.075993242906407, 49.376099166693166, -6.318670517066494, 31.074459203518927, 47.36447872710414, 3.2373862888198346, 23.44713773811236, 50.526635989081115, 6.078072449890897, 29.114847970195115, 46.758293957682326, -7.424157347995788, 19.137932100566104, 53.468708453001454, 5.173440476646647, 26.06166468351148, 45.80457749310881, 6.768439264269546, 27.216548636788502, 49.77088648476638, 1.8498405301943421, 27.654420899925753, 52.87035043234937, -0.11587011977098882, 26.05089013813995, 45.39248080109246, -6.824803752824664, 23.498347394634038, 57.1478173090145, -0.6102100177668035, 25.07088230107911, 44.55801889766008, -4.38025766517967, 30.482411303091794, 56.1494208057411, -5.784666950348765, 29.802261721342802, 46.093306886032224, 3.0534850247204304, 22.199328478891402, 51.49224309134297, -1.6965789604000747, 26.469003080856055, 54.510695019271225, -5.4737507295794785, 25.357302594929934, 49.89785954589024, -2.1435662009753287, 22.165629061637446, 43.431737549835816, -2.720006990712136, 26.062644622288644, 45.13984453282319, 0.0063258083537220955, 27.663749032653868, 56.55936570605263, -1.0918477736413479, 26.79945934098214, 54.562115103472024, -6.890463241143152, 27.893045336240903, 45.52829707041383, 4.699618387967348, 30.03047986072488, 53.33696401095949, -0.8123881509527564, 26.15175474085845, 50.09305860614404, 1.254894743906334, 23.758630567463115, 56.473667081445456, -4.086746794637293, 26.906226406572387, 45.92553738737479, 6.567839866038412, 25.713962863665074, 47.67071599839255, -3.60510264756158, 28.58753068954684, 46.086544890422374, -0.3987211093772203, 28.69424977223389, 50.029142620041966, 3.35734338266775, 25.30241681728512, 51.90986501867883, -1.3777492835652083, 32.01218511676416, 50.9756925678812, 5.169394392287359, 25.75510445749387, 55.09915472473949, 1.2087574729230255, 19.59337829845026, 48.05551977478899, -4.238431697012857, 27.45701303007081, 44.819150200346485, 2.4894688662607223, 21.99917464167811, 44.566728009376675, 5.579529065871611, 25.528692855732515, 49.73994013504125, -3.5646091878879815, 20.728584089083597, 51.243349318392575, 6.583905948791653, 28.368148120353, 51.34649343905039, -3.347021732479334, 30.46904396614991, 52.956187546951696, -2.4861990264616907, 25.90812836540863, 49.65488845715299, -5.268648981582373, 18.30633828882128, 57.490517975529656, -4.510584297822788, 21.116294297389686, 51.67977090459317, -4.155805211048573, 30.115056001814082, 47.794349077157676, 5.87003423483111, 28.388180407928303, 54.30310395429842, 4.776526096975431, 22.17145251110196, 43.504041543928906, 3.7966686801519245, 24.976808440405875, 44.68037587008439, -6.0761160019319504, 25.517125357873738, 50.19616708275862, -1.6188209771644324, 19.40651583718136, 50.731501042610034, -2.693741738330573, 30.801202272996306, 56.03472865768708, -0.013423757627606392, 30.971843792358413, 45.31992006581277, 0.36111369263380766, 30.57600669679232, 46.16367111215368, -5.614271698286757, 24.592287029372528, 54.16886270046234, 3.595277345739305, 26.936613323632628, 56.89543473650701, 3.3360646152868867, 31.914853412890807, 53.40817551827058, -4.772447972791269, 24.708364182151854, 46.657574124401435, -4.388109741266817, 26.589034490752965, 56.18179106619209, -6.054058674490079, 18.837206803727895, 46.31005955277942, -1.3843188271857798, 17.68215107731521, 54.94044484104961, 3.853206572821364, 25.271787460660562, 54.06313795247115, -2.198842540383339, 18.45601977664046, 57.22279189620167, 1.6797063080593944, 29.904247553786263, 54.54601868521422, -0.5294606031384319, 23.362095922930166, 44.343177448026836, 3.874724751804024, 20.51143836346455, 56.14091903436929, -4.4636694132350385, 26.864093072945252, 51.5017825178802, -6.938410510774702, 18.19322833325714, 43.42181819607504, 0.13900518883019686, 20.351134395459667, 57.268995478516445, -3.9684863586444408, 29.158149329014122, 43.94797677989118, -0.780919510871172, 22.971197116421536, 49.92958895396441, -3.766559043433517, 24.02757093659602, 44.0108839829918, 0.37455812213011086, 22.03800235176459, 51.40379974269308, 3.5155117500107735, 28.0506154242903, 56.71464052866213];
THREE.bubblesProperties.far.xyz = [-5.529444927815348, 29.886213215067983, 63.97364707663655, 6.565616140142083, 33.775165143888444, 81.65868889540434, 2.769792212639004, 28.899522975552827, 58.06129923090339, -12.211304556112736, 33.93096805084497, 31.037189550697803, 5.146743468940258, 16.22258663410321, 76.88763491809368, -14.144062993582338, 22.51427760347724, 78.24329074472189, 0.6961349956691265, 20.61532011255622, 74.64792234823108, -9.221917565446347, 25.83115345798433, 41.07682975009084, -7.19724707538262, 20.88623494375497, 58.34913616999984, 14.802812787238508, 29.14576843380928, 67.88075501099229, 0.4063054290600121, 18.469425020739436, 14.943133667111397, 1.4721149881370366, 26.01741050835699, 46.69821359217167, -10.528058360796422, 33.824480581097305, 46.12029092386365, 6.220544131938368, 20.261722109280527, 47.53839325159788, 4.598914298694581, 37.741006910800934, 48.594327196478844, -11.949020298197865, 24.069372622761875, 67.37749954685569, -14.45111438864842, 38.53070156183094, 80.62177695333958, 8.340295446105301, 20.15513411257416, 40.93174535781145, 10.401633130386472, 16.512242171447724, 12.615387886762619, -2.39600537577644, 10.542218443006277, 78.23226932436228, -4.850091675762087, 38.032851605676115, 61.57220892608166, 5.022675090003759, 29.58272034302354, 39.56503281369805, -5.097777578048408, 12.59052038192749, 87.76564663276076, -5.901203071698546, 19.11747011123225, 55.45195238664746, 4.057456513401121, 23.704245793633163, 35.71664338931441, -6.068928006570786, 25.55328235263005, 43.75855350866914, -1.9692335044965148, 30.739037161692977, 29.870262574404478, -13.593105990439653, 26.220998778007925, 69.7743776999414, 10.597317097708583, 39.20250246766955, 66.60789743065834, 3.0143140233121812, 25.89055861113593, 31.26016229391098, -8.802548269741237, 29.698566438164562, 77.76976607739925, 14.79013360105455, 37.14788648998365, 12.048008497804403, -13.36293380241841, 10.12412968557328, 55.715482253581285, 1.247517317533493, 37.48051146278158, 82.85720454528928, -12.933375723659992, 13.385782118421048, 72.13203806430101, 0.6045685638673604, 20.819732672534883, 72.72768734022975, -3.3034263784065843, 30.761713779065758, 67.34602091833949, 5.0509674358181655, 34.113177529070526, 25.40393091738224, -4.990827329456806, 22.531961938366294, 63.32002080976963, 0.991603487636894, 39.69272449379787, 31.49694049730897, -10.633516972884536, 16.69325814349577, 50.84808707237244, 14.215555430855602, 27.93928096536547, 50.99436741322279, 12.97173926839605, 15.307662158738822, 86.08397075906396, -9.596118754707277, 31.466415338218212, 37.01541190966964, -14.871693304739892, 15.243599258828908, 24.357208032160997, 1.1414836789481342, 10.104313190095127, 57.949109990149736, -10.716867225710303, 15.490393075160682, 50.40575144812465, -11.419886557850987, 27.215392307844013, 35.51957190036774, 13.855821832548827, 17.4623463046737, 84.39986346289515, -0.15288415364921093, 17.78601695317775, 34.68238601461053, -3.7442898144945502, 32.71287233103067, 52.57134551182389, 14.383701256010681, 22.80026165768504, 14.97033528983593, 1.2358642718754709, 30.377097090240568, 62.88241997361183, -9.212624731007963, 16.020427143666893, 18.252669516950846, -8.806414066348225, 21.286308204289526, 13.276485241949558, 3.6499664769507945, 29.097217698581517, 46.71392686665058, -12.331301879603416, 34.61205260595307, 60.75436543673277, -14.866750105284154, 16.17968057980761, 73.33346592262387, -12.010377016849816, 32.87931422702968, 35.87445721030235, -12.48602637089789, 34.257303655613214, 43.449957855045795, -0.9459276054985821, 25.159134336281568, 57.52974562346935, 2.342067863792181, 28.775064188521355, 71.22359534725547, 11.442477218806744, 36.343700708821416, 59.29163884371519, -4.190434443298727, 21.429553295020014, 25.56748917326331, 3.281447282060981, 16.291861436329782, 38.92013784497976, 4.678859619889408, 12.860215897671878, 18.402804136276245, 1.8378120032139122, 24.77384503465146, 87.76066072285175, -8.267297570127994, 20.669997774530202, 47.175665982067585, -12.308750983793288, 24.761666178237647, 65.14108067378402, 0.18147381953895092, 15.625494392588735, 13.147457912564278, 4.172681900672615, 33.885733392089605, 46.14829974249005, 7.228954480960965, 26.536170567851514, 27.43313703685999, 3.083981384988874, 29.64974262053147, 51.49729583412409, -10.323415340390056, 34.52945510391146, 20.556953605264425, -2.18240087851882, 20.41650558123365, 40.50944611430168, -6.535790835041553, 13.03085807710886, 59.6353736333549, -1.6417251387611032, 22.457558640744537, 78.26491683721542, 11.295616028364748, 31.051238893996924, 89.92907905951142, -1.0830921912565827, 35.739642784465104, 59.86483907327056, -4.123995895497501, 17.288083736784756, 27.683631163090467, -8.75984595157206, 16.553044395986944, 37.38374510779977, -7.009718308690935, 19.730120017193258, 63.051946721971035, 14.16760384105146, 27.645856442395598, 23.01207872107625, -9.530998652335256, 38.46835495438427, 50.97001064568758, 1.1965813441202044, 12.876586962956935, 88.18175895139575, -11.575555459130555, 11.242111437022686, 43.6816549487412, -6.150478622876108, 33.63428354030475, 13.472016379237175, -0.42889857664704323, 20.69928598124534, 21.520786434412003, 7.2359519731253386, 37.74322289042175, 58.56670442968607, 0.12345344061031938, 13.751244593877345, 45.11450884863734, 1.7384381219744682, 29.972739301156253, 69.06005101278424, 2.1686400985345244, 20.82174616632983, 81.91183391958475, -9.996332440059632, 17.73104301886633, 26.34709933772683, -3.6253065685741603, 13.733341582119465, 64.00168782100081, -4.318033643066883, 37.507823118939996, 17.32086017727852, -5.365575437899679, 17.003802536055446, 39.0122895129025, 0.42238203808665276, 32.81533074565232, 83.69684360921383, 4.896731853950769, 13.691503920126706, 67.41074511781335, 7.476465424988419, 19.515472322236747, 71.32919132709503, -8.593140242155641, 17.990061247255653, 84.62666567414999, -10.175973346922547, 21.862170747481287, 19.94328822940588, 3.794095222838223, 15.929066508542746, 47.948372438549995, 2.921838469337672, 37.889407821930945, 58.36934208869934, -11.196266238112003, 13.03331883624196, 86.26252140849829, -2.273736165370792, 18.88323533348739, 69.36373580247164, -8.187506783287972, 21.523137697950006, 32.52691583707929, 6.853698932100087, 14.652603866998106, 26.319491639733315, 0.7025635940954089, 12.91417473461479, 52.57971839979291, 10.545481166336685, 33.08428347110748, 72.57830109447241, -4.9992237612605095, 29.320602011866868, 60.89697077870369, 6.957633839920163, 29.312639692798257, 15.511346962302923, -14.702120984438807, 36.04003868997097, 87.95938042923808, -0.46469017630442977, 27.12250056443736, 55.672902911901474, 8.568839316722006, 31.470010776538402, 44.40752634778619, 6.103678916115314, 16.68183321831748, 72.89505375549197, -3.0652144784107804, 29.466861123219132, 65.28322199359536, -14.87668810877949, 13.663153522647917, 48.32835836336017, -2.4300700868479908, 24.149010614492, 41.96603609248996, -4.158643162809312, 33.64125022897497, 47.08163121715188, 12.29596848366782, 30.50518771400675, 73.59471092000604, 4.891701000742614, 12.347291472833604, 66.1589827761054, 4.706860526930541, 34.126232294365764, 81.41000296920538, -4.60186182288453, 21.528699153568596, 59.26910933107138, -12.200786385219544, 19.271041189786047, 63.938850946724415, 10.546534792520106, 25.24505326524377, 43.7060334905982, -5.32619064906612, 37.942462265491486, 45.39508393034339, 11.638443467672914, 30.208763538394123, 51.100284568965435, 3.2140379352495074, 34.77701314724982, 17.507342845201492, 6.451961821876466, 28.070412871893495, 41.9606102630496, -10.338693873491138, 20.668472750112414, 59.628045335412025, -11.631481549702585, 19.589407288003713, 22.8133362904191, 2.2876521991565824, 38.45158676151186, 45.296991281211376, 12.316700401715934, 21.80816897423938, 79.35014767572284, -6.832276345230639, 29.204742861911654, 11.204496566206217, -9.61288353195414, 34.34668651083484, 39.376760087907314, -7.363165430724621, 30.070053574163467, 88.34846790879965, -10.07883190177381, 27.733643068931997, 71.00524250417948, -7.56388345034793, 14.697132322471589, 12.651045937091112, 11.271142554469407, 13.843944636173546, 41.17568986490369, 14.76726908935234, 16.09290794003755, 15.320508256554604, -8.993387427181005, 34.50531724141911, 55.040831454098225, 6.892433697357774, 17.332303123548627, 68.65665892139077, 11.672250470146537, 39.03401280986145, 47.98266213387251, 13.909029769711196, 16.619053489994258, 23.350821267813444, 7.3513735248707235, 18.666390301659703, 66.0374421812594, -4.338359101675451, 30.58919142698869, 89.08884976059198, -0.6142546911723912, 37.35794359119609, 23.004987463355064, 8.153922480996698, 21.83979427209124, 74.93561306968331, -0.2477280842140317, 14.809621737804264, 50.29123080894351, 11.065523063298315, 24.341624702792615, 37.7729157358408];
THREE.bubblesProperties.close.size = [0.039212358967942826, 0.22737679594517113, 0.14079809517396186, 0.0006323315798305737, 0.06245270431729527, 0.3000413067290312, 0.039655870797262745, 0.06320273704938285, 0.33759017609580594, 0.2515128475362596, 0.0780486208835687, 0.07846404303879415, 0.034641489936255154, 0.031985117617882516, 0.1346388294769466, 0.41412008159706987, 0.03782455975461048, 0.2610145571884048, 0.537674936416262, 0.03883750481623785, 0.009877084354168016, 0.20132599711423246, 0.02753838186816273, 0.11529407123119448, 0.12322076962187054, 0.052915919056124104, 0.23572526783485814, 0.05695693014633174, 0.07581288812685875, 0.3831138094273132, 0.1662568359951487, 0.07985563526920189, 0.09658648968971328, 0.37471327849751673, 0.017826425894505393, 0.0634300511873685, 0.321676305253912, 0.34054950855323535, 0.47632516223647825, 0.08071541571311433, 0.42116422624923555, 0.20714974422564958, 0.004050902695084147, 0.06169081024310306, 0.0319512243722257, 0.18172382768931664, 0.3439729056537845, 0.1865602589592798, 0.3679667097010563, 0.2722859715758023, 0.5095280053718004, 0.0252950571025995, 0.11901240343677454, 0.3527441883309618, 0.018272168834360437, 0.29311496023813827, 0.040554904908037565, 0.07769679904945949, 0.19099922132843367, 0.026401961611571618, 0.04579034374382216, 0.23761698358107436, 0.09694045376946407, 0.14967660922835, 0.45957099067733165, 0.19629423825341366, 0.3793291354850235, 0.09796971960623738, 0.11135793963693373, 0.5407789558755499, 0.010964084471161232, 0.06144710371769568, 0.38879775927424404, 0.2253621000880969, 0.0029169830871987623, 0.3356632386359393, 0.06031086636262259, 0.19196185951236536, 0.42184666271798854, 0.06279905295468113, 0.11685660951952853, 0.39417411783101364, 0.21941655947208655, 0.1811678153551078, 0.002331939307528478, 0.21287129667469365, 0.05687639282759588, 0.21051185103855938, 0.4355744536054556, 0.2067518328351996, 0.3085565792676856, 0.12184223415340394, 0.0818220996336467, 0.4026399341522493, 0.1024406363412394, 0.13154167632911953, 0.04121418457145263, 0.015355691871910366, 0.32001831874701464, 0.41453732895889656, 0.039997551640774634, 0.2563313688925649, 0.11609650587900838, 0.055078195587196545, 0.03125928780129199, 0.5135542734718157, 0.010709586599001232, 0.23839348777409985, 0.4354557311063447, 0.010222460150605284, 0.06927534847049781, 0.18527659899077556, 0.04569937493745102, 0.09145070155367079, 0.0869655360507802, 0.01828474575352296, 0.04201552111464037, 0.07224519198494243, 0.0795272248882393, 0.05018082323414132, 0.3646815568638012, 0.05554903574200455, 0.42879527115075766, 0.4240282796726206, 0.17332878653991807, 0.010876299509580377, 0.12472331870792006, 0.2866570315027433, 0.10106869964616477, 0.006816010607795958, 0.004216459653954869, 0.2763274201249465, 0.09747900498040868, 0.045066531376728614, 0.19053168646856164, 0.03109184373547368, 0.00029916756862647417, 0.3526306579185156, 0.0331318747973344, 0.06061677031758531, 0.19769222968510144, 0.015657649945295896, 0.5313526458893365, 0.06257050427636973, 0.24547925788615688, 0.07173905616747324, 0.0764358592964699, 0.06409970685791891, 0.0646629153363422];
THREE.bubblesProperties.far.size = [0.3224372433820004, 0.035141871179640884, 0.303359480406884, 0.2083777257896961, -0.039727016565043495, -0.033665790148823684, -0.3012342953070624, -0.006306857843502747, 0.012012131679485847, 0.21695818780330078, -0.023847264565827385, -0.08402143623698537, -0.0187087329314345, 0.013610368634904215, 0.17244181028746638, -0.6689918247223969, 0.029635999145619145, 0.06182380730169375, 1.201986221087455, -0.07964509930215603, -0.013938981219627498, 0.4544033746994019, -0.006764806488452234, 0.3363767041754332, -0.19074346174314444, 0.4121769728665235, 0.0447114961657757, -0.27197826584609486, -0.08167844841132012, -0.042770664840106526, 0.1318521644321368, 0.38942570174589314, -0.02897273749868329, -0.200251446772339, -0.16871111628414787, -0.021586484507965274, -2.835420981822402e-05, -0.31724095243609524, 0.5656441608152816, 0.0029365892257462523, 0.03851795868709112, 0.2046631081135697, 0.15816811346359977, -6.386990788903086e-05, -0.009513679274411933, 0.4380622632650627, -0.7931147345160561, 0.004101653763206879, 1.0019731586591265, -0.1449615498300751, 0.003022033022222139, 0.040516680217775665, 0.06724851963506105, 0.34583766255445836, -0.6087819673726167, -1.2590873509391314, -0.3953038286236913, -0.013219051179543369, -0.2577860062374577, 0.40323670498505043, -0.05794831061810757, -0.11196531761597564, -0.05788605096060459, 0.45035869008497975, -1.174169774933277, -0.16363648767713412, -0.1458199005888314, 0.005033714520512491, 0.6561147338928888, -0.5154960059247262, -0.24322454332804647, -0.043755324787068374, 1.2777486174706767, -0.15973608522621807, -0.11778225558887827, 0.31100691253660473, 0.09153808397864861, 0.06990563177791986, 0.7365685591817397, -0.08772493921822853, -0.1537316476611012, 0.24769356755310737, -0.8843874196943129, 0.7113788930835199, 0.15179233733382153, -0.006638512777098308, -0.07801951765304492, -0.05005505407133541, -0.1438103998587914, -0.4980416253472681, 0.7830425594704842, 0.1188640642491395, 0.08170251502109165, -0.20499959934396508, 0.01793978551641462, 0.05163643721447643, -1.4527793361484482, 0.18078373268939435, -0.3208341767929123, 0.0043903187559504045, 0.1059779173132524, 0.0029615868741178293, 0.20507890390676684, -1.1789644458728636, 0.07691660485998777, 0.0063667380428042, -0.19049877888304198, 0.06446928688101504, 2.0580395765020483, -0.17119556223435997, -0.12272386188948986, 0.21832593848537332, 0.0016438991605473004, 0.2083511467097783, -0.7829822176518492, 0.00656177387375931, 0.025934147341453103, 0.08237830720006939, 1.2129832257696813, 0.48468365958339077, -0.006497644359289362, -0.002894017224878747, -0.007293717714928733, -0.03586191901891202, 0.22968052980875836, 0.5600268020078479, -0.0028664812050587514, 0.05337528773177718, 0.29164617158933487, 0.6040571129764901, -0.2144306578176347, 0.9631362892950587, -0.2745366884793346, -0.03242908283955907, 2.5661161602329687, -0.047964534025960244, 0.0004495286408618253, -0.2236418074212803, 0.05201745155495752, -0.0038531479644830957, 0.013670066573385426, -0.005297495754215674, 0.01785705781221405, -0.07947285217118052, -0.08128110373967727, -0.8642700964329624, -0.004112092029041916, 1.1964573628755006, 0.03660030023245258, -0.32194497337047817];
THREE.bubblesProperties.close.texture = [2, 7, 4, 3, 6, 7, 4, 7, 6, 5, 7, 0, 1, 7, 7, 1, 3, 6, 6, 6, 7, 3, 0, 7, 2, 6, 0, 5, 6, 4, 2, 6, 0, 4, 0, 4, 1, 0, 1, 4, 1, 2, 1, 7, 6, 3, 4, 1, 7, 4, 3, 0, 3, 7, 1, 7, 6, 0, 3, 0, 5, 2, 5, 7, 7, 0, 7, 1, 0, 7, 7, 0, 0, 1, 4, 7, 2, 7, 7, 1, 0, 1, 0, 0, 4, 5, 1, 5, 1, 2, 5, 0, 5, 6, 1, 7, 0, 7, 2, 2, 2, 5, 0, 4, 4, 1, 3, 0, 7, 2, 3, 3, 1, 4, 6, 6, 4, 4, 6, 1, 2, 6, 4, 3, 6, 6, 4, 5, 6, 6, 7, 3, 0, 6, 5, 6, 3, 7, 7, 7, 0, 5, 7, 4, 7, 1, 3, 4, 7, 6];
THREE.bubblesProperties.far.texture = [0, 1, 5, 3, 0, 5, 3, 1, 1, 1, 5, 4, 3, 1, 2, 1, 7, 3, 2, 7, 5, 4, 6, 0, 6, 3, 1, 0, 6, 7, 3, 2, 7, 0, 6, 2, 6, 2, 1, 4, 7, 0, 4, 0, 6, 1, 6, 6, 0, 2, 5, 1, 1, 2, 1, 4, 4, 5, 7, 6, 5, 7, 6, 4, 7, 0, 4, 4, 1, 5, 2, 7, 3, 5, 1, 1, 6, 5, 3, 5, 3, 1, 2, 2, 7, 7, 7, 4, 2, 2, 3, 6, 2, 1, 2, 0, 1, 2, 6, 3, 4, 6, 1, 1, 2, 4, 0, 1, 5, 5, 0, 2, 7, 1, 3, 7, 4, 2, 4, 2, 2, 6, 4, 0, 6, 1, 1, 0, 7, 5, 0, 5, 7, 0, 7, 0, 7, 4, 7, 2, 5, 7, 5, 4, 6, 4, 3, 1, 6, 4];




SEGMENTS = [[0, 0, 40], [0, 50, 100], [0, 0, 200], ['link']];


window.request

setViewport($(document.body));

function setViewport($el) {
  $viewport = $el;

  width = $viewport.width();
  height = $viewport.height();

  function checkCount (orbs, desiredNumberofOrbs) {
    if (orbs.length === desiredNumberofOrbs) {
      $('.help-icon').click(function () {
        $('.help-container').toggleClass('is-active');
        $('.help-inner').toggleClass('is-active');
      });
      $('.help-container').click(function (event) {
        $('.help-container').toggleClass('is-active');
        $('.help-inner').toggleClass('is-active');
      })

      $('.load').html('');

      init();
      animate();
    }
  }

  loadImage("./images/bluGrn1-64.png", orbImages);
  loadImage("./images/bluGrn2-64.png", orbImages);
  loadImage("./images/bluGrn3-64.png", orbImages);
  loadImage("./images/bluGrn4-64.png", orbImages);
  loadImage("./images/bluGrn5-64.png", orbImages);
  loadImage("./images/prpl1-64.png", orbImages);
  loadImage("./images/prpl2-64.png", orbImages);
  loadImage("./images/prpl3-64.png", orbImages);
  loadAudio("./sounds/rumb.mp3", transitionSounds);
  loadAudio("./sounds/rumb1.mp3", transitionSounds);

  function loadAudio (url, transitionSounds, orbImages) {
    soundsTimesRun++;
    var fileName = url.match(/(\w+.mp3)/g)[0];
    transitionPreSounds[fileName] = new Audio(url);
    transitionSounds.push(transitionPreSounds[fileName]);
  }

  function loadImage (url, orbImages, transitionSounds) {
    orbsTimesRun++;
    orbPreImages['img' + orbsTimesRun] = document.createElement('img');
    orbPreImages['img' + orbsTimesRun].src = url;
    orbPreImages['img' + orbsTimesRun].addEventListener('load', function (event) {
      orbImages.push(THREE.ImageUtils.loadTexture(url));
      orbImages[orbImages.length - 1].image = orbPreImages['img' + orbsTimesRun];
      checkCount(orbImages, 8);
    });
  }

}

function init() {
  scene = new THREE.Scene();

  // renderer

  renderer = new THREE.WebGLRenderer();
  renderer.setSize(width, height);
  $viewport.append(renderer.domElement);

  // camera

  camera = new THREE.PerspectiveCamera(50, width / height, 20, 90);
  camera.position.set(0, 0, 40);
  scene.add(camera);

  renderer.setClearColor(0x000000, 1);



  // light

  // var light = new THREE.AmbientLight ( 0x404040 );
  // scene.add(light);

  jQuery(window).on('resize', resize);
  $viewport.on('mousemove', mouseMove);
  $viewport.on('DOMMouseScroll mousewheel', scroll);
  jQuery(document).on('keydown', keyDown);

  function mouseMove (event) {
    mouse.x = (event.clientX / window.innerWidth) * 2 - 1;
    mouse.y = (event.clientY / window.innerHeight) * 2 + 1;
  }

  function scroll (event) {
    event.originalEvent.wheelDelta >= 0 ? prev() : next();
  }

  function prev () {
    if (currentIndex === 0) {
      return;
    } else if (currentIndex === SEGMENTS.length - 1) {
      $('#contact-div').css('top', '100vh');
      currentIndex = currentIndex - 1;
    } else {
      transitionPreSounds['rumb1.mp3'].play();
      animateCamera(currentIndex - 1);
    }
  }

  function next () {
    if (currentIndex === SEGMENTS.length - 2) {
      currentIndex = currentIndex + 1;
      $('#contact-div').css('top', '95vh');
      // $(function(){
        // $viewport.append("<div id='contact-div' style='top: 101vh;'></div>")
        // $('#contact-div').load("contact.html");
      // });
    } else if (currentIndex === SEGMENTS.length - 1) {
      return;
    } else {
      transitionPreSounds['rumb.mp3'].play();
      animateCamera(currentIndex + 1);
    }
  }

  function animateCamera (index) {
    if ( index > currentIndex ) {
      TweenMax.to(camera.position, 2, {
        x: SEGMENTS[index][0],
        y: SEGMENTS[index][1],
        z: SEGMENTS[index][2]
      })
      currentIndex = index;
      var coords = SEGMENTS[currentIndex];
      var vector = new THREE.Vector3(coords[0],coords[1],coords[2]);
      camera.lookAt(vector);
    } else {
      TweenMax.to(camera.position, 2, {
        x: SEGMENTS[index][0],
        y: SEGMENTS[index][1],
        z: SEGMENTS[index][2]
      })
      currentIndex = index;
      var coords = SEGMENTS[currentIndex];
      var vector = new THREE.Vector3(coords[0],coords[1],coords[2]);
      camera.lookAt(vector);
    }
  }

  function resize () {
    width = $viewport.width();
    height = $viewport.height();

    camera.aspect = width/height;
    camera.updateProjectionMatrix();

    renderer.setSize(width, height);
  }

  function keyDown (event) {
    // if (!isScrolling && isActive) {
      var keyCode = event.keyCode;

      if (keyCode === 40) {
        next();
      } else if (keyCode === 38) {
        prev();
      }
    // }
  }


  function addSegmentOneSprites(numberOfSprites, collection) {

    go(numberOfSprites, collection, 'close');
    go(numberOfSprites, collection, 'far');

    function go (numberOfSprites, collection, distance) {
      for (var i = 0, j = 0; i < numberOfSprites; i++, j+= 3) {
        if (distance === 'close') {
          var matTexture = THREE.bubblesProperties.close.texture[i];
        } else {
          var matTexture = THREE.bubblesProperties.far.texture[i];
        };
        var rotation = Math.random() * 6.283;
        matTexture === 1 || matTexture === 7 ? rotation = 0 : rotation = Math.random() * 6.283;
        var mat = new THREE.SpriteMaterial({
          map: collection[matTexture],
          color: 0xffffff,
          fog: true,
          rotation: rotation,
        })
        var bubble = new THREE.Sprite(mat);
        if (distance === 'close') {
          // var x = (Math.random() * 15) - 7.5;
          // var y = (Math.random() * 15) + 17.5;
          // var z = (Math.random() * 15) + 42.5;
          var x = THREE.bubblesProperties.close.xyz[j];
          var y = THREE.bubblesProperties.close.xyz[j + 1];
          var z = THREE.bubblesProperties.close.xyz[j + 2];
          var width = mat.map.image.width;
          // var newSize = (Math.random() * ((width * .01) * Math.random()));
          var newSize = THREE.bubblesProperties.close.size[i];
          // bubble.smallSize = newSize;
        } else if (distance === 'far') {
          // var x = (Math.random() * 30) - 15;
          // var y = (Math.random() * 30) + 10;
          // var z = (Math.random() * 80) + 10;
          var x = THREE.bubblesProperties.far.xyz[j];
          var y = THREE.bubblesProperties.far.xyz[j + 1];
          var z = THREE.bubblesProperties.far.xyz[j + 2];
          var width = mat.map.image.width;
          // var newSize = (Math.random() * ((width * .016) * (Math.random() * 4) - 1.5)) * (Math.random() * ((width * .016) * (Math.random() * 4) - 1.5));
          var newSize = THREE.bubblesProperties.far.size[i];
          bubble.newSize = newSize;
        }
        bubble.matTexture = matTexture;
        bubble.position.set(x, y, z);
        bubble.scale.set(newSize, newSize, 1);
        scene.add(bubble);
        THREE.bubbles.push(bubble);
      }

    }

  }

  function addSegmentOneSpheres () {
    var geometry = new THREE.SphereGeometry(3, 32, 32);
    var material = new THREE.MeshLambertMaterial({ color: 0x888888 });
    var mesh = new THREE.Mesh(geometry, material);
    scene.add(mesh);
    mesh.position.set(0, 25, 50);
    THREE.bigSphereSegmentOne = mesh;

    var geometry = new THREE.SphereGeometry(1, 32, 32);
    var material = new THREE.MeshLambertMaterial({ color: 0x888888 });
    var mesh = new THREE.Mesh(geometry, material);
    scene.add(mesh);
    mesh.position.set(-8, 27, 65);
  }

  // segment 0
  addSegmentZero();

  function addSegmentZero () {
    THREE.lightZero = new THREE.PointLight(0xffffff, 2, 40);
    THREE.lightZero.position.set(0, 0, 20);
    scene.add(THREE.lightZero);

    var trianglesCount = 80;
    THREE.triangles = [];
    for (var i = 0; i < trianglesCount; i++) {
      var radius = ((Math.random() + .5) * (Math.random() + .5) * (Math.random() + .5) * (Math.random() + .5));
      var geometry = new THREE.TetrahedronGeometry(radius, 0);
      var color = (Math.random() * .99) * 0xffffff;
      var material = new THREE.MeshLambertMaterial({
        color: 0xffffff,
        shading: THREE.FlatShading,
        });
      var pyramid = new THREE.Mesh(geometry, material);
      pyramid.radius = radius;
      scene.add(pyramid);
      var x = (Math.random() * 50) - 25;
      var y = (Math.random() * 50) - 25;
      var z = (Math.random() * 60) - 60;
      pyramid.position.set(x, y, z);
      pyramid.rotX = Math.random() > .5 ? .05 - (pyramid.radius * .02) : -(.05 - pyramid.radius * .02);
      pyramid.rotY = Math.random() > .5 ? .05 - (pyramid.radius  * .02) : -(.05 - pyramid.radius * .02);
      pyramid.timing = Math.floor(Math.random() * 10);
      THREE.triangles.push(pyramid);
    }
    // scene.fog = THREE.Fog( 0x888888, 0.01 );
    // fog.position.set(0, 0, 0);
  }

  // segment 1
  addSegmentOne(orbImages);



  function addSegmentOne (orbImages) {
    THREE.lightOne = new THREE.PointLight(0xffffff, 3, 50);
    THREE.lightOne.position.set(0,50,25);
    scene.add(THREE.lightOne);

    THREE.lightTwo = new THREE.PointLight(0xffffff, 2, 10);
    THREE.lightTwo.position.set(-8, 32, 62);
    scene.add(THREE.lightTwo);

    addSegmentOneSpheres();
    addSegmentOneSprites(150, orbImages);

    THREE.spotlight = new THREE.SpotLight( 0xffffff );
    THREE.spotlight.castShadow = true;    // only necessary if you want to cast shadows
    THREE.spotlight.target = THREE.bigSphereSegmentOne;    // keep the THREE.spotlight on target
    THREE.spotlight.exponent = 90;    // useful for narrowing the beam
    THREE.spotlight.shadowCameraNear = 1;
    THREE.spotlight.shadowCameraFar = 60;
    THREE.spotlight.shadowCameraFov = 30;
    //THREE.spotlight.shadowCameraVisible = true;    // show me the camera
    THREE.spotlight.shadowDarkness = 0.9;
    THREE.spotlight.position.set(0, 50, 50);
  }

  // segment 2
  addSegmentTwo();

  function addSegmentTwo () {
    THREE.lightThree = new THREE.PointLight( 0x66b2b2, 1, 75 );
    scene.add(THREE.lightThree);
    THREE.lightFour = new THREE.PointLight( 0x6666ff, 1, 75 );
    scene.add(THREE.lightFour);
    THREE.lightFive = new THREE.PointLight( 0x66ff66, 1, 75 );
    scene.add(THREE.lightFive);

    THREE.edgyOrbs = [];
    numEdgyOrbs = 256;
    for (var i = 0; i < numEdgyOrbs; i++) {

      var radius = 0.5;
      var geometry = new THREE.TetrahedronGeometry(radius, 0);
      var color = 0xffffff;
      var material = new THREE.MeshLambertMaterial({
        color: color,
        shading: THREE.FlatShading,
      });
      var edgyOrb = new THREE.Mesh(geometry, material);
      scene.add(edgyOrb);
      var x = (Math.random() * 50) - 25;
      var y = (Math.random() * 50) - 25;
      var z = (Math.random() * 100) + 100;
      edgyOrb.position.set(x, y, z);
      THREE.edgyOrbPositions.push(x, y, z);
      THREE.edgyOrbs.push(edgyOrb);
    }

    transition();

    // Cube

    // var amount = 8;
    // var separation = 3;
    // var offset = ( ( amount - 1 ) * separation ) / 2;
    //
    // for ( var i = 0; i < numEdgyOrbs; i ++ ) {
    //
    //   var x = ( i % amount ) * separation;
    //   var y = Math.floor( ( i / amount ) % amount ) * separation;
    //   var z = Math.floor( i / ( amount * amount ) ) * separation;
    //
    //   THREE.edgyOrbPositions.push( x - offset, y - offset, z - offset + 160);
    //
    // }

    // Sphere

    var radius = 15;

    for ( var i = 0; i < numEdgyOrbs; i ++ ) {

      var phi = Math.acos( -1 + ( 2 * i ) / numEdgyOrbs );
      var theta = Math.sqrt( numEdgyOrbs * Math.PI ) * phi;

      THREE.edgyOrbPositions.push(
        radius * Math.cos( theta ) * Math.sin( phi ),
        radius * Math.sin( theta ) * Math.sin( phi ),
        (radius * Math.cos( phi )) + 150
      );

    }
  }

  function transition() {
    var offset = currentSegThree * numEdgyOrbs * 3;
    var duration = 3000;
    if (currentSegThree === 0) {
      duration = 25000;
    }

    for ( var i = 0, j = offset; i < numEdgyOrbs; i++, j += 3 ) {

      var object = THREE.edgyOrbs[ i ];

      new TWEEN.Tween( object.position )
        .to( {
          x: THREE.edgyOrbPositions[ j ],
          y: THREE.edgyOrbPositions[ j + 1 ],
          z: THREE.edgyOrbPositions[ j + 2 ]
        }, duration )
        .easing( TWEEN.Easing.Exponential.InOut )
        .start();

    }

    new TWEEN.Tween( this )
      .to( {}, duration )
      .onComplete( transition )
      .start();

    currentSegThree = ( currentSegThree + 1 ) % 2;
  }

  // controls

  THREE.controls = new THREE.OrbitControls(camera, renderer.domElement);
  THREE.controls.center.set (0,0,0);
  THREE.controls.userRotate = false;
  THREE.controls.userZoom = false;

}


function animate() {
  requestAnimationFrame(animate);
  // mouseOverInteract();

  // segment 0 spin tetrahedrons, glitch out

  for (var i = 0; i < THREE.triangles.length; i++) {
    if (Math.round(new Date().getTime() * .001) % THREE.triangles[i].timing == 0) {
      var rotX = Math.random() > .5 ? .05 - (THREE.triangles[i].radius * .02) : -(.05 - THREE.triangles[i].radius * .02);
      var rotY = Math.random() > .5 ? .05 - (THREE.triangles[i].radius * .02) : -(.05 - THREE.triangles[i].radius * .02);

      THREE.triangles[i].rotation.x += rotX;
      THREE.triangles[i].rotation.y -= rotY;
    } else {
      THREE.triangles[i].rotation.x += THREE.triangles[i].rotX;
      THREE.triangles[i].rotation.y -= THREE.triangles[i].rotY;
    }

  }

  // segment 0 COS move lightZero

  var oscillate = ((Math.cos(cameraMoveY) - 1) * 20);

  THREE.lightZero.position.set(oscillate + 20, oscillate + 20, oscillate);

  // segment 1 orbs grow, shrink

  for ( var i = 0, l = THREE.bubbles.length; i < l; i ++ ) {

    var object = THREE.bubbles[ i ];
    if (object.newSize !== undefined) {
      var scale = (Math.cos(cameraMoveY) / 5) + object.newSize;
      object.scale.set( scale, scale, scale );
    }

  }

  // help scroll brightness

  if ($('.help-inner').css('display') === 'block') {
    $('.down.arrow').css('-webkit-filter', 'invert(' + (Math.cos(cameraMoveY) + 1) + ')');
  }
  $('.attention').css('-webkit-filter', 'opacity(' + (Math.cos(cameraMoveY) + 1) + ')');

  // segment 1 orb lighting animation

  THREE.lightOne.intensity += Math.cos(cameraMoveY) / 50;

  // segment 2 light movement

  var time = Date.now() * 0.0005;

  THREE.lightThree.position.x = Math.sin( time * 0.7 ) * 30;
	THREE.lightThree.position.y = Math.cos( time * 0.5 ) * 40;
	THREE.lightThree.position.z = (Math.cos( time * 0.3 ) * 30) + 190;

	THREE.lightFour.position.x = Math.cos( time * 0.3 ) * 30;
	THREE.lightFour.position.y = Math.sin( time * 0.5 ) * 40;
	THREE.lightFour.position.z = (Math.sin( time * 0.7 ) * 30) + 190;

	THREE.lightFive.position.x = Math.sin( time * 0.7 ) * 30;
	THREE.lightFive.position.y = Math.cos( time * 0.3 ) * 40;
	THREE.lightFive.position.z = (Math.sin( time * 0.5 ) * 30) + 190;

  // segment 2 tweens

  TWEEN.update();

  // segment 2 tetrahedron spin

  for (var i = 0; i < THREE.edgyOrbs.length; i++) {
    tetrahedron = THREE.edgyOrbs[i];
    tetrahedron.rotation.x += .05;
  }

  function mouseOverInteract() {
      // update the picking ray with the camera and mouse position
  	raycaster.setFromCamera( mouse, camera );

  	// calculate objects intersecting the picking ray
  	var intersects = raycaster.intersectObjects( scene.children );

    if ( intersects.length > 0 ) {
      debugger

			if ( INTERSECTED != intersects[ 0 ].object ) {

				if ( INTERSECTED ) {
          INTERSECTED.material.emissive.setHex( INTERSECTED.currentHex );
        }
				INTERSECTED = intersects[ 0 ].object;
				INTERSECTED.currentHex = INTERSECTED.material.emissive.getHex();
				INTERSECTED.material.emissive.setHex( 0xff0000 );

			}

		} else {

			if ( INTERSECTED ) {
        // INTERSECTED.material.emissive.setHex( INTERSECTED.currentHex );
      }
			INTERSECTED = null;

		}
  }

  camera.position.y += Math.cos(cameraMoveY) / 50;
  cameraMoveY += 0.02;

  camera.position.x += ((mouse.x * 5) - camera.position.x) * 0.03;
  renderer.render(scene, camera);
  THREE.controls.update();
}
